[{"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\EditJob.tsx":"1","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\MainPage.tsx":"2","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\EditJobPage.tsx":"3","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\index.tsx":"4","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\LoginPage.tsx":"5","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\UpdateVCPage.tsx":"6","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\UpdateJobPage.tsx":"7","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\remote\\ServiceApi.ts":"8","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\CvList.tsx":"9","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\JobsList2.tsx":"10","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\Login.tsx":"11","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\UpdateJob.tsx":"12","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\UpdateCV.tsx":"13","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\App.tsx":"14","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\reportWebVitals.ts":"15"},{"size":3126,"mtime":1610468389357,"results":"16","hashOfConfig":"17"},{"size":9518,"mtime":1610468092126,"results":"18","hashOfConfig":"17"},{"size":2039,"mtime":1610470441911,"results":"19","hashOfConfig":"17"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"17"},{"size":1481,"mtime":1609348270043,"results":"21","hashOfConfig":"17"},{"size":2433,"mtime":1610467980979,"results":"22","hashOfConfig":"17"},{"size":1917,"mtime":1610382016832,"results":"23","hashOfConfig":"17"},{"size":1277,"mtime":1610469134786,"results":"24","hashOfConfig":"17"},{"size":1431,"mtime":1610209118627,"results":"25","hashOfConfig":"17"},{"size":1652,"mtime":1610469611587,"results":"26","hashOfConfig":"17"},{"size":2887,"mtime":1606407346385,"results":"27","hashOfConfig":"17"},{"size":3057,"mtime":1610382016825,"results":"28","hashOfConfig":"17"},{"size":8381,"mtime":1610452623130,"results":"29","hashOfConfig":"17"},{"size":911,"mtime":1610387167218,"results":"30","hashOfConfig":"17"},{"size":425,"mtime":499162500000,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},"1svcw7f",{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\EditJob.tsx",["67"],"import { Button, Card, CardContent, createStyles, TextField, withStyles } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\n\r\nexport interface EditJobProps {\r\n    classes: any;\r\n    nume: string;\r\n    descriere: string;\r\n    handleData:any;\r\n    buttonFunction:any;\r\n    buttonName:any;\r\n}\r\n \r\nexport interface EditJobState {\r\n    \r\n}\r\n\r\nconst styles = createStyles({\r\n    textFieldBox: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        width:'90%',\r\n        margin: 'auto',\r\n        marginTop: '4%',\r\n        marginBottom: '4%',\r\n    },\r\n    numeBox: {\r\n        width:'100%',\r\n        marginBottom:'4%',\r\n    },\r\n    descriereBox: {\r\n        width:'100%'\r\n    },\r\n    nume: {\r\n        width: '100%',\r\n    },\r\n    descriere: {\r\n        width: '100%',\r\n    },\r\n    nextButtonBox : {\r\n        width: '100%',\r\n        marginBottom: '4%',\r\n    },\r\n    nextButton : {\r\n        float: 'right',\r\n        marginRight:'8%',\r\n        padding: '11px',\r\n    }\r\n});\r\n \r\nclass EditJob extends React.Component<EditJobProps, EditJobState> {\r\n    \r\n    handleData = (type: any) => (event: any) => {\r\n        this.props.handleData({\r\n            [type]: event.target.value,\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const {classes, nume, descriere} = this.props;\r\n        return (\r\n            <div>\r\n                <div className = {classes.textFieldBox}>\r\n                    <div className={classes.numeBox}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <TextField\r\n                                label = \"Nume\" \r\n                                variant = \"outlined\" \r\n                                value = {nume} \r\n                                onChange={this.handleData('nume')}\r\n                                className = {classes.nume}\r\n                                />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                    <div className={classes.descriereBox}>\r\n                        <Card>\r\n                            <CardContent>\r\n                                <TextField\r\n                                label = \"Descriere\"\r\n                                variant = \"outlined\"\r\n                                value = {descriere}\r\n                                onChange={this.handleData('descriere')}\r\n                                multiline\r\n                                rows = {20}\r\n                                className = {classes.descriere} \r\n                                />\r\n                            </CardContent>\r\n                        </Card>\r\n                    </div>\r\n                </div>\r\n                <div className = {classes.nextButtonBox}>\r\n                    <Button variant=\"contained\" color=\"primary\" className = {classes.nextButton} onClick={this.props.buttonFunction}>\r\n                       {this.props.buttonName}\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withStyles(styles)(EditJob);","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\MainPage.tsx",["68"],"import * as React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport JobsList2 from '../../src/components/JobsList2'\r\nimport { Button, Card, DialogTitle, Typography } from '@material-ui/core';\r\nimport ServiceApi from '../remote/ServiceApi';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport CvlistComponent from '../components/CvList'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport fs from 'fs';\r\n\r\n\r\nexport interface MainPageProps extends RouteComponentProps {\r\n    classes: any;\r\n}\r\n \r\nexport interface MainPageState {\r\n    jobsList: any;\r\n    cvList  : any;\r\n    isOpenCv: boolean;\r\n    isOpenJob:boolean;\r\n    cvIdSelected:any;\r\n}\r\n\r\nconst styles = createStyles({\r\n\tcvCard: {\r\n        width:'230px',\r\n        height:'400px',\r\n    },\r\n    cardBaza:{\r\n        width:'230px',\r\n        height:'400px',\r\n        textAlign:'center',\r\n        display:'flex',\r\n        alignItems:'center',\r\n        flexDirection:'column',\r\n        justifyContent:'center'\r\n    },\r\n    buttonDescarca:{\r\n        width:'100px',\r\n        height:'100px'\r\n    },\r\n    cvListBox : {\r\n    },\r\n    pageBox : {\r\n        width:'70%',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        alignItems:'center',\r\n        marginTop:'90px',\r\n        justifyContent:'space-between'\r\n    },\r\n    container:{\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n        alignItems:'center'\r\n    },\r\n    jobListBox:{\r\n    },\r\n    dbButtonBox:{\r\n    },\r\n    jobButtonBox:{\r\n        display:'flex',\r\n        width:'100%',\r\n        flexDirection:'row',\r\n        justifyContent:'space-evenly',\r\n    },\r\n    jobList:{\r\n        height:'90%'\r\n    }\r\n});\r\n\r\n\r\nclass MainPage extends React.Component<MainPageProps, MainPageState> {\r\n    private service:ServiceApi;\r\n    constructor(props:MainPageProps)\r\n    {\r\n        super(props);\r\n        this.state ={\r\n            jobsList:[],\r\n            cvList:[],\r\n            isOpenCv:false,\r\n            isOpenJob:false,\r\n            cvIdSelected:0\r\n        }\r\n       this.service = new ServiceApi();\r\n    }\r\n\r\n    async componentDidMount()\r\n    {\r\n        localStorage.clear();\r\n        const jobs =await this.service.getJobs();\r\n        this.setState({\r\n            jobsList:jobs.data,\r\n        })\r\n    }\r\n\r\n    updateListJobs = (data:any)=>{\r\n        this.setState({\r\n            jobsList:data,\r\n        });\r\n    }\r\n\r\n    showCv = ()=>{\r\n        localStorage.setItem(\"idCV\",this.state.cvIdSelected);\r\n        this.props.history.push('/updateCV');\r\n    }\r\n\r\n    showJob = ()=>{\r\n        this.props.history.push('/editJob');\r\n    }\r\n\r\n    deleteJob = async ()=>{\r\n        const id = localStorage.getItem('idJob');\r\n        try{\r\n            await this.service.deleteJob(id);\r\n            const jobs =await this.service.getJobs();\r\n            this.setState({\r\n                isOpenCv:false,\r\n            isOpenJob:false,\r\n                jobsList:jobs.data,\r\n            });\r\n            return;\r\n        }catch(err){\r\n            console.log(err);\r\n        }\r\n        this.modalOff();\r\n    }\r\n\r\n    showModalCv = (id:any) =>{\r\n        this.setState({\r\n            isOpenCv:true,\r\n            cvIdSelected:id\r\n        })\r\n    }\r\n\r\n    showModalJob = (id:any) =>{\r\n        localStorage.setItem(\"idJob\", id);\r\n        this.setState({\r\n            isOpenJob:true,\r\n        })\r\n    }\r\n\r\n    modalOff = ()=>{\r\n        this.setState({\r\n            isOpenCv:false,\r\n            isOpenJob:false,\r\n        })\r\n    }\r\n\r\n    newCV = ()=>{\r\n        localStorage.setItem(\"idCv\",\"-1\");\r\n        this.props.history.push('/updateCV');\r\n    }\r\n\r\n    newJob = ()=>{\r\n        localStorage.setItem(\"idJob\",\"-1\");\r\n        this.props.history.push('/editJob');\r\n    }\r\n\r\n\r\n\r\n    selectedCv = async (id: any)=>{\r\n        try{\r\n            const data =await this.service.getCv(id);\r\n            this.setState({\r\n                cvList:data.data,\r\n            })\r\n        }catch(err)\r\n        {\r\n            console.log(err);\r\n            this.setState({\r\n                cvList:[],\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    save= ()=>{\r\n        try{\r\n        }catch(err)\r\n        {\r\n            alert(\"CV-ul nu a fost salvat\");\r\n        }\r\n    }\r\n\r\n\r\n    getXcel = async ()=>{\r\n        try{\r\n            const d = await this.service.getXcel({test:'asdasd'});\r\n            const data = d.data;\r\n            console.log(d);\r\n            //this.savee(\"d\",data,\"image/jpeg\",true)\r\n            const contentType = 'application/vnd.ms-excel';\r\n            const b64Data = data;\r\n            const blob = this.b64toBlob(b64Data, contentType);\r\n            const blobUrl = URL.createObjectURL(blob);\r\n            let anchor = document.createElement('a');\r\n            anchor.href = blobUrl;\r\n            anchor.download = \"dragos\";\r\n            anchor.click();\r\n        URL.revokeObjectURL(blobUrl);\r\n        }catch(err)\r\n        {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n     b64toBlob = (b64Data:any, contentType:any='', sliceSize:any=512) => {\r\n        const byteCharacters = atob(b64Data);\r\n        const byteArrays = [];\r\n      \r\n        for (let offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n          const slice = byteCharacters.slice(offset, offset + sliceSize);\r\n          const byteNumbers = new Array(slice.length);\r\n          for (let i = 0; i < slice.length; i++) {\r\n            byteNumbers[i] = slice.charCodeAt(i);\r\n          }\r\n          const byteArray = new Uint8Array(byteNumbers);\r\n          byteArrays.push(byteArray);\r\n        }\r\n        const blob = new Blob(byteArrays, {type: contentType});\r\n        return blob;\r\n      }\r\n\r\n\r\n    render() { \r\n        const {classes} = this.props\r\n        return (\r\n            <div className={classes.container}>\r\n                <Dialog\r\n                    open={this.state.isOpenCv}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Alegeti o varianta\"}</DialogTitle>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.showCv}>\r\n                                    View\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\">\r\n                                    Delete\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.modalOff}>\r\n                                    Back\r\n                    </Button>\r\n                </Dialog>\r\n                <Dialog\r\n                    open={this.state.isOpenJob}\r\n                    aria-labelledby=\"alert-dialog-title\"\r\n                    aria-describedby=\"alert-dialog-description\"\r\n                >\r\n                    <DialogTitle id=\"alert-dialog-title\">{\"Alegeti o varianta\"}</DialogTitle>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.showJob}>\r\n                                    View\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.deleteJob}>\r\n                                    Delete\r\n                    </Button>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.modalOff}>\r\n                                    Back\r\n                    </Button>\r\n                </Dialog>\r\n                <div className={classes.pageBox}>\r\n                    <div className = {classes.cvListBox}>\r\n                        <Card className={classes.cvCard}>\r\n                            <div className={classes.jobList}>\r\n                                <JobsList2 select={this.selectedCv} updateJob={this.showModalJob} updateListJobs={this.updateListJobs} items={this.state.jobsList} />\r\n                            </div>\r\n                            <div className={classes.jobButtonBox}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.newJob}>\r\n                                    New\r\n                                </Button>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className = {classes.cvListBox}>\r\n                        <Card className={classes.cvCard}>\r\n                            <div className={classes.jobList}>\r\n                                <CvlistComponent selectCv={this.showModalCv} items={this.state.cvList} /></div>\r\n                            <div className={classes.jobButtonBox}>\r\n                                <Button variant=\"contained\" color=\"primary\" onClick={this.newCV}>\r\n                                    New CV\r\n                                </Button>\r\n                            </div>\r\n                        </Card>\r\n                    </div>\r\n                    <div className={classes.dbButtonBox}>\r\n                        <Card className={classes.cardBaza} >\r\n                            <Typography variant=\"h5\" component=\"h2\">\r\n                                Baza de date\r\n                            </Typography>\r\n                            <Button className={classes.buttonDescarca} variant=\"contained\" color=\"secondary\" onClick={this.getXcel}>\r\n                                DESCARCA\r\n                            </Button>\r\n                        </Card>\r\n                    </div>\r\n                </div>        \r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withStyles(styles) (MainPage);","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\EditJobPage.tsx",["69","70"],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\index.tsx",[],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\LoginPage.tsx",[],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\UpdateVCPage.tsx",["71","72","73"],"import { Container } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { Component } from 'react';\r\nimport UpdateCV from '../components/UpdateCV';\r\nimport ServiceApi from '../remote/ServiceApi'\r\nexport interface UpdateCVPageProps {\r\n}\r\n \r\nexport interface UpdateCVPageState {\r\n    imgSrc:string;\r\n    varsta:string;\r\n    gen:string;\r\n    casatorit:string;\r\n    educatie:string;\r\n    munca:string;\r\n    nume:string;\r\n    buttonText:any;\r\n    buttonFunction:any;\r\n}\r\n \r\nclass UpdateCVPage extends React.Component<UpdateCVPageProps, UpdateCVPageState> {\r\n    private service:ServiceApi = new ServiceApi();\r\n    constructor(props:UpdateCVPageProps) {\r\n        super(props);\r\n        this.state = {\r\n            imgSrc:'',\r\n            varsta:'',\r\n            gen:'',\r\n            casatorit:'',\r\n            educatie:'',\r\n            munca:'',\r\n            nume:'',\r\n            buttonText:\"next\",\r\n            buttonFunction:'',\r\n        }\r\n    }\r\n\r\n    async  componentDidMount(){\r\n        const id = localStorage.getItem('idCV');\r\n        console.log(id);\r\n        if(id=== \"-1\" || id == undefined )\r\n        {\r\n            this.setState({\r\n                imgSrc:\"\",\r\n                varsta:\"\",\r\n                educatie:\"\",\r\n                munca:\"\",\r\n                nume:\"\",\r\n                buttonText:\"Save\",\r\n                buttonFunction:this.save\r\n            })\r\n            return;\r\n        }\r\n        let job;\r\n        try{\r\n            job =await this.service.getCvById(id);\r\n            job=job.data;\r\n        }catch(err)\r\n        {\r\n            console.log(err)\r\n        }\r\n        console.log(job);\r\n        this.setState({\r\n            imgSrc:job.photo_id,\r\n            varsta:job.age,\r\n            gen:job.sex,\r\n            educatie:job.education,\r\n            munca:job.professional,\r\n            nume:job.name,\r\n            buttonText:\"Update\",\r\n            buttonFunction:this.update\r\n        })\r\n    }\r\n\r\n\r\n    save = (img:any)=>{\r\n        console.log(img);\r\n    }\r\n\r\n    update =(img:any)=>{\r\n        console.log(img);\r\n    }\r\n\r\n    handleChange = (data: any) => {\r\n        this.setState({\r\n            ...data,\r\n        });\r\n    };\r\n\r\n    render() { \r\n        return (\r\n            <div>\r\n                <UpdateCV \r\n                {...this.state}\r\n                handleChange={this.handleChange}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default UpdateCVPage;","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\pages\\UpdateJobPage.tsx",["74"],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\remote\\ServiceApi.ts",[],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\CvList.tsx",["75","76"],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\JobsList2.tsx",["77"],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\Login.tsx",["78","79","80","81"],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\UpdateJob.tsx",["82"],"C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\components\\UpdateCV.tsx",["83","84","85","86"],"import { Button,Input, Card, CardHeader, CardMedia, FormControl, FormControlLabel,  InputLabel, MenuItem, Radio, RadioGroup, Select, TextField, CardContent, Typography, CardActionArea } from '@material-ui/core';\r\nimport * as React from 'react';\r\nimport { withStyles, createStyles } from '@material-ui/core/styles';\r\nimport Service from \"../remote/ServiceApi\"\r\n\r\nexport interface UpdateCVProps {\r\n    classes:any;\r\n    imgSrc:string;\r\n    varsta:string;\r\n    gen:string;\r\n    casatorit:string;\r\n    educatie:string;\r\n    munca:string;\r\n    nume:string;\r\n    buttonText:any;\r\n    buttonFunction:any;\r\n    handleChange(data: any): void;\r\n}\r\n \r\nexport interface UpdateCVState {\r\n    selectedImg:any;\r\n}\r\n\r\n\r\nconst styles = createStyles({\r\n    container : {\r\n        width:'100%',\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        justifyContent:'space-between',\r\n        marginLeft:'0px',\r\n        marginRight:'0px',\r\n        padding:'0px,'\r\n    },\r\n    containerItems : {\r\n        width:'33%',\r\n        padding:'10px',\r\n        display:'flex',\r\n        flexDirection:'column',\r\n    },\r\n    profileBox : {\r\n        display:'flex',\r\n        flexDirection:'row',\r\n        height:'50%',\r\n        width:'100%',\r\n        marginBottom:'10%',\r\n    },\r\n    profilePictureBox : {\r\n        width:'70%',\r\n        marginRight:'2%'\r\n    },\r\n    profilePicture : {\r\n        height:'100%',\r\n    },\r\n    profileButtonBox : {\r\n        display:'inline-block',\r\n        marginTop:'auto',\r\n        marginBottom:'auto',\r\n        justifyContent:'center',\r\n    },\r\n    profileButton : {\r\n        padding:'10px',\r\n    },\r\n    varstaBox : {\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        marginBottom:'10%',\r\n    },\r\n    varsta : {\r\n        width:'200px',\r\n    },\r\n    genBox : {\r\n        width:'100%',\r\n        display:'flex',\r\n        justifyContent:'center',\r\n        marginBottom:'10%',\r\n        \r\n    },\r\n    genLabel : {\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    },\r\n    nextButtonBox : {\r\n        float:'right',\r\n        marginRight:'1%',\r\n        marginTop:'1%'\r\n    },\r\n    nextButton : {\r\n        padding:'10px',\r\n    },\r\n    abc:{\r\n        display:'flex',\r\n        justifyContent:'center'\r\n    }\r\n});\r\n \r\nclass UpdateCV extends React.Component<UpdateCVProps, UpdateCVState> {\r\n\r\n    private service:Service = new Service();\r\n    handleData = (type: any) => (event: any) => {\r\n        this.props.handleChange({\r\n            [type]: event.target.value,\r\n        });\r\n    };\r\n\r\n    handleImg =(type:string ) =>(event:any)=>{\r\n        this.props.handleChange({\r\n            [type]:URL.createObjectURL(this.state.selectedImg)\r\n        })\r\n    }\r\n\r\n    varsta = () => {\r\n        let lst = [];\r\n        for(let i = 10; i <= 60; ++i) {\r\n            lst[i] = i;\r\n        }\r\n        return lst;\r\n    }\r\n\r\n    buttonFunction=()=>{\r\n        this.props.buttonFunction(this.state.selectedImg);\r\n    }\r\n\r\n    test = async ()=>{\r\n        const b=await this.toBase64(this.state.selectedImg);\r\n        this.service.updateCv({\r\n            img:b+\"dasd\",\r\n            test:'ttttt'\r\n        })\r\n    }\r\n\r\n   toBase64 = (file:any) => new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n    });\r\n\r\n    render() { \r\n        const {classes, varsta,imgSrc ,gen, casatorit, educatie, munca, nume} = this.props;\r\n        return (\r\n        <div>\r\n            <div className={classes.container}>\r\n                <div className={classes.containerItems}>\r\n                    <div className={classes.profileBox}>\r\n                        <div className={classes.profilePictureBox}>\r\n                            <Card className={classes.profilePicture}>\r\n                                <div className={classes.abc}>\r\n                                    <CardHeader\r\n                                        title={nume}\r\n                                    ></CardHeader>\r\n                                </div>\r\n                                <div>\r\n                                    <img width=\"300px\" height=\"300px\" src={imgSrc} alt={nume}/>\r\n                                </div>\r\n                            </Card>\r\n                        </div>\r\n                        <div className={classes.profileButtonBox}>\r\n                            <Button variant='contained' color='primary' onClick={\r\n                                this.handleImg(\"imgSrc\")\r\n                            }  className={classes.profileButton}>\r\n                                Incarca imagine\r\n                            </Button>\r\n                            <Input type=\"file\" onChange={\r\n                                (e:any)=>{\r\n                                    this.setState({\r\n                                        selectedImg:e.target.files[0]\r\n                                    })\r\n                                }\r\n                            }></Input>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.varstaBox}>\r\n                        <FormControl variant=\"outlined\" className={classes.varsta}>\r\n                        <InputLabel>Varsta</InputLabel>\r\n                            <Select\r\n                                value={varsta}\r\n                                onChange={this.handleData(\"varsta\")}\r\n                                label=\"Varsta\"\r\n                                >\r\n                                {this.varsta().map((item) => (\r\n                                    <MenuItem value = {item}>{item}</MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </FormControl>\r\n                    </div>\r\n                    <div className={classes.genBox}>\r\n                        <div>\r\n                            <label className = {classes.genLabel}>Selectati genul: </label>\r\n                            <RadioGroup aria-label=\"gender\" name=\"gender1\" value={gen} onChange={this.handleData(\"gen\")} row>\r\n                                <FormControlLabel value=\"male\" control={<Radio />} label=\"Barbat\" />\r\n                                <FormControlLabel value=\"female\" control={<Radio />} label=\"Femeie\" />\r\n                            </RadioGroup>\r\n                        </div>\r\n                    </div>\r\n                    <div className={classes.genBox}>\r\n                        <div className={classes.genContinut}>\r\n                            <label className = {classes.genLabel}>Stare conjugala: </label>\r\n                            <RadioGroup aria-label=\"Stare conjugala\" name=\"gender1\" value={casatorit} onChange={this.handleData(\"casatorit\")} row>\r\n                                <FormControlLabel value=\"Casatorit(a)\" control={<Radio />} label=\"Casatorit(a)\" />\r\n                                <FormControlLabel value=\"Necasatorit(a)\" control={<Radio />} label=\"Necasatorit(a)\" />\r\n                            </RadioGroup>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.containerItems}>\r\n                <TextField\r\n                        label=\"Specializare\"\r\n                        multiline\r\n                        rows={24}\r\n                        variant=\"outlined\"\r\n                        value={educatie}\r\n                        onChange={this.handleData(\"educatie\")}\r\n                    />\r\n                </div>\r\n                <div className={classes.containerItems}>\r\n                <TextField\r\n                        label=\"Educaties\"\r\n                        multiline\r\n                        rows={24}\r\n                        variant=\"outlined\"\r\n                        value={munca}\r\n                        onChange={this.handleData(\"munca\")}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className={classes.nextButtonBox}>\r\n                <Button variant='contained' color='primary'  className={classes.nextButton} onClick={\r\n                    this.buttonFunction\r\n                }>\r\n                    {this.props.buttonText}\r\n                </Button>\r\n            </div>\r\n    </div>\r\n        );\r\n    }\r\n}\r\n \r\nexport default withStyles(styles)(UpdateCV);","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\App.tsx",["87"],"import React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport LoginPage from '../src/pages/LoginPage';\r\nimport MainPage from '../src/pages/MainPage'\r\nimport UpdateCVPage from './pages/UpdateVCPage';\r\nimport UpdateJobPage from './pages/UpdateJobPage';\r\nimport EditJobPage from './pages/EditJobPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact={true} path=\"/\" component={LoginPage}></Route>\r\n        <Route exact={true} path=\"/home\" component={MainPage}></Route>\r\n        <Route exact={true} path=\"/updateCV\" component={UpdateCVPage}></Route>\r\n        <Route exact = {true} path = \"/updateJob\" component = {UpdateJobPage} />\r\n        <Route exact = {true} path = \"/editJob\" component = {EditJobPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\D-drive-34937\\Repositories\\FE-Admin-HCI\\src\\reportWebVitals.ts",[],{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":19},{"ruleId":"88","severity":1,"message":"92","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":10},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":22,"column":29,"nodeType":"95","messageId":"96","endLine":22,"endColumn":31},{"ruleId":"88","severity":1,"message":"97","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":19},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":19},{"ruleId":"93","severity":1,"message":"94","line":41,"column":29,"nodeType":"95","messageId":"96","endLine":41,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":2,"column":10,"nodeType":"90","messageId":"91","endLine":2,"endColumn":19},{"ruleId":"98","severity":1,"message":"99","line":19,"column":40,"nodeType":"100","messageId":"101","endLine":19,"endColumn":42},{"ruleId":"88","severity":1,"message":"102","line":37,"column":24,"nodeType":"90","messageId":"91","endLine":37,"endColumn":28},{"ruleId":"98","severity":1,"message":"99","line":25,"column":44,"nodeType":"100","messageId":"101","endLine":25,"endColumn":46},{"ruleId":"88","severity":1,"message":"103","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":14},{"ruleId":"88","severity":1,"message":"104","line":7,"column":8,"nodeType":"90","messageId":"91","endLine":7,"endColumn":12},{"ruleId":"88","severity":1,"message":"105","line":8,"column":8,"nodeType":"90","messageId":"91","endLine":8,"endColumn":12},{"ruleId":"88","severity":1,"message":"106","line":9,"column":8,"nodeType":"90","messageId":"91","endLine":9,"endColumn":24},{"ruleId":"88","severity":1,"message":"89","line":3,"column":10,"nodeType":"90","messageId":"91","endLine":3,"endColumn":19},{"ruleId":"88","severity":1,"message":"107","line":1,"column":42,"nodeType":"90","messageId":"91","endLine":1,"endColumn":51},{"ruleId":"88","severity":1,"message":"108","line":1,"column":145,"nodeType":"90","messageId":"91","endLine":1,"endColumn":156},{"ruleId":"88","severity":1,"message":"109","line":1,"column":158,"nodeType":"90","messageId":"91","endLine":1,"endColumn":168},{"ruleId":"88","severity":1,"message":"110","line":1,"column":170,"nodeType":"90","messageId":"91","endLine":1,"endColumn":184},{"ruleId":"88","severity":1,"message":"111","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":12},"@typescript-eslint/no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'fs' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Container' is defined but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'data' is assigned a value but never used.","'Avatar' is defined but never used.","'Link' is defined but never used.","'Grid' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'CardMedia' is defined but never used.","'CardContent' is defined but never used.","'Typography' is defined but never used.","'CardActionArea' is defined but never used.","'logo' is defined but never used."]